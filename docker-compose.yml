version: '3.8'

services:
  # Base de données PostgreSQL
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: passer
      POSTGRES_DB: gestion_ecole
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Utilisez le port par défaut de PostgreSQL (5432)
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d gestion_ecole"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Application Flask
  flask-app:
    build: .
    environment:
      DATABASE_URL: postgresql://postgres:passer@db:5432/gestion_ecole
    depends_on:
      db:
        condition: service_healthy  # Attend que la base de données soit prête
    networks:
      - mynetwork
    ports:
      - "5000:5000"  # Expose le port 5000 pour l'application Flask
      - "8000:8000"  # Expose le port 8000 pour les métriques Prometheus
    volumes:
      - .:/app  # Monte le répertoire actuel dans le conteneur pour le développement

  # Prometheus pour la collecte des métriques
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Fichier de configuration
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - mynetwork
    restart: unless-stopped

  # Grafana pour la visualisation des métriques
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Mot de passe admin
    volumes:
      - grafana-storage:/var/lib/grafana  # Stockage persistant pour Grafana
    networks:
      - mynetwork
    restart: unless-stopped

  # Node Exporter pour les métriques système
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - mynetwork
    restart: unless-stopped

# Volumes pour la persistance des données
volumes:
  postgres_data:
  grafana-storage:

# Réseau pour connecter les services
networks:
  mynetwork: